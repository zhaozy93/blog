// 装逼利器.js

/**
 * 判断数组中是否包含时  有可能得到-1
 * 利用 ~ 进行位运算 如果是-1， 位运算之后得到0  if(0)就是假喽
 * ～按位非 求反码(变换符号再减1)
 */
let a = [];
if(~a.indexOf('has')){}


/**
 * 正数求整 替代 parseInt()
 * 利用 >>>0 无符号右移一位
 * 0.0232 >>>0  ==>0
 * 1.1 >>>0  ==> 1
 * -1.1 >>>0  ==> 4294967295   ！！！ 仅适用于正数
 */

positive_number>>>0;

/**
 * 任意数求整
 * 求两次补码
 * ~~ 1.1  ==> 1
 * ~~ -1.1 ==> -1
 * ~~ -1.9 ==> -1
 * ~~ 0   ==> 0
 */

 ~~ 1.1

/**
 * 最大整数
 */
const MAX_SAFE_INTEGER = 9007199254740991


/**
 * 使用void 0 来代替undefined
 */
void 0


/**
 * 检测 +0 与 -0
 * 首先判断 两者都是0
 * 再判断 1 除以两者以后是否相同
 * 如果不同那么就是符号不同
 * -Infinite 与 InFinite
 */

a ===0 && a === b &&  1 / a === 1 / b;


/**
 * 检测NaN
 * 可以调用isNaN方法 
 * js中只有NaN不等于自己
 */
isNaN(obj) 
obj !== obj